{
  "name": "Peekaboo.js",
  "tagline": " jQuery plugin for showing and hiding content in an accessible way.",
  "body": "# peekaboo.js\r\n\r\nA jQuery plugin for showing and hiding content in an accessible way.\r\n\r\n## Features \r\n\r\n- Flexible for most cases where you need to show/hide stuff, such as menus,\r\n  accordions, tabs.\r\n- Simple by default, and customizable for more complex uses.\r\n- Adds ARIA attributes and a `<button>` element (when necessary) for keyboard and screen reader accessibility.\r\n\r\n## Installation\r\n\r\nWith npm:\r\n\r\n```bash\r\nnpm install --save peekaboo-toggle\r\n```\r\n\r\nWith npmcdn:\r\n\r\n```html\r\n<script src=\"https://npmcdn.com/peekaboo-toggle/lib/index.js\"></script>\r\n```\r\n\r\n## How to use\r\n\r\nBy default, a peekaboo toggle will show/hide the next element in the DOM. Let's\r\nsay we have a button that should show/hide a menu when clicked:\r\n\r\n```html\r\n<button class=\"peekaboo\">Menu</button>\r\n<nav>\r\n  <ul>\r\n    <li><a href=\"breakfast.html\">Breakfast</a></li>\r\n    <li><a href=\"lunch.html\">Lunch</a></li>\r\n    <li><a href=\"dinner.html\">Dinner</a></li>\r\n  </ul>\r\n</nav>\r\n```\r\n\r\nWe bind peekaboo to the button like this:\r\n\r\n```js\r\n// If you're using npm\r\nimport $ from 'jquery';\r\nimport peekaboo from 'peekaboo-toggle';\r\n\r\n$('.peekaboo').peekaboo();\r\n```\r\n\r\nPeekaboo will add the [`hidden` attribute] to the `<nav>`, so let's add some\r\nCSS to make sure hidden means hidden:\r\n\r\n```css\r\n[hidden] {\r\n  display: none !important;\r\n}\r\n```\r\n\r\nPeekaboo will add the `aria-expanded` and `aria-controls` attributes to the\r\n`<button>` and will &emdash; since we didn't specify one &emdash; generate an\r\nID for the `<nav>`. The nav will be hidden by default, and the DOM will look something like this:\r\n\r\n```html\r\n<button class=\"peekaboo\" aria-expanded=\"false\" aria-controls=\"peekaboo-c4tlipic9\">Menu</button>\r\n<nav id=\"peekaboo-c4tlipic9\" hidden=\"hidden\">\r\n  <ul>\r\n    <li><a href=\"breakfast.html\">Breakfast</a></li>\r\n    <li><a href=\"lunch.html\">Lunch</a></li>\r\n    <li><a href=\"dinner.html\">Dinner</a></li>\r\n  </ul>\r\n</nav>\r\n```\r\n\r\n### Toggling some other element\r\n\r\nYou can specify the ID of the content you'd like to toggle using the `data-toggle-target` or `aria-control` attributes. This is useful if the content doesn't immediately follow the toggle button in your document.\r\n\r\n```html\r\n<button class=\"peekaboo\" aria-controls=\"menu\">Menu</button>\r\n<h2>We have many beautiful things on our menus.</h2>\r\n<nav id=\"menu\">\r\n  <ul>\r\n    <li><a href=\"breakfast.html\">Breakfast</a></li>\r\n    <li><a href=\"lunch.html\">Lunch</a></li>\r\n    <li><a href=\"dinner.html\">Dinner</a></li>\r\n  </ul>\r\n</nav>\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}